(function() {var implementors = {};
implementors["lockdown"] = [{"text":"impl Send for Key","synthetic":true,"types":[]},{"text":"impl Send for FetchKeyRequest","synthetic":true,"types":[]},{"text":"impl Send for FetchKeyResponse","synthetic":true,"types":[]},{"text":"impl Send for SentMessage","synthetic":true,"types":[]},{"text":"impl Send for Message","synthetic":true,"types":[]},{"text":"impl Send for TrustKey","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Fanout","synthetic":true,"types":[]},{"text":"impl Send for Flow","synthetic":true,"types":[]},{"text":"impl Send for SignedMessage","synthetic":true,"types":[]},{"text":"impl Send for EncryptedMessage","synthetic":true,"types":[]},{"text":"impl Send for PostedMessage","synthetic":true,"types":[]},{"text":"impl Send for Invite","synthetic":true,"types":[]},{"text":"impl Send for EncryptedInvite","synthetic":true,"types":[]},{"text":"impl Send for ChannelPair","synthetic":true,"types":[]},{"text":"impl Send for ManageStream","synthetic":true,"types":[]},{"text":"impl Send for PostMessageResponse","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for Content","synthetic":true,"types":[]},{"text":"impl Send for HarmonyMethodMetadata","synthetic":true,"types":[]},{"text":"impl Send for Override","synthetic":true,"types":[]},{"text":"impl Send for Action","synthetic":true,"types":[]},{"text":"impl Send for EmbedHeading","synthetic":true,"types":[]},{"text":"impl Send for EmbedField","synthetic":true,"types":[]},{"text":"impl Send for Embed","synthetic":true,"types":[]},{"text":"impl Send for Attachment","synthetic":true,"types":[]},{"text":"impl Send for Metadata","synthetic":true,"types":[]},{"text":"impl Send for Message","synthetic":true,"types":[]},{"text":"impl Send for UserStatus","synthetic":true,"types":[]},{"text":"impl Send for ActionType","synthetic":true,"types":[]},{"text":"impl Send for ActionPresentation","synthetic":true,"types":[]},{"text":"impl Send for FieldPresentation","synthetic":true,"types":[]},{"text":"impl Send for Reason","synthetic":true,"types":[]},{"text":"impl&lt;ImpErr&gt; !Send for E2EEClient&lt;ImpErr&gt;","synthetic":true,"types":[]},{"text":"impl Send for StreamKind","synthetic":true,"types":[]},{"text":"impl Send for HarmonyAes","synthetic":true,"types":[]},{"text":"impl&lt;Error&gt; Send for E2EEError&lt;Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FanoutError","synthetic":true,"types":[]},{"text":"impl Send for MegOlm","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()